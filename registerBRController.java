package application;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.input.KeyCode;
import javafx.stage.Stage;

public class registerBRController {
	@FXML
	private PasswordField tfPassword;
	@FXML
	private PasswordField tfPasswordConfirm;
	@FXML
	private TextField tfYCNum;
	@FXML
	private TextField tfUserName;
	@FXML
	private Button btOK;
	@FXML
	private Button btCancel;

	private Stage stage;

	public void setStage(Stage stage) {
		this.stage = stage;
	}

	public void init() {
		stage.getScene().setOnKeyPressed(e -> {
			if (e.getCode() == KeyCode.ENTER) {
				if (btOK.isFocused()) {
					this.registerClicked(new ActionEvent());
				} else if (btCancel.isFocused()) {
					this.cancelClicked(new ActionEvent());
				}
			}
		});
	}

	// Event Listener on Button[#btOK].onAction
	@FXML
	public void registerClicked(ActionEvent event) {
		// TODO Autogenerated
		try (Connection connection = ConnectionDB.getConnection()) {
			String userName = tfUserName.getText().trim();
			if (0 == userName.length()) {
				JOptionPane.showMessageDialog(null, "用户名不为空");
				return;
			}
			if (userName.length() > 9) {
				JOptionPane.showMessageDialog(null, "用户名过长");
				return;
			}

			String password = tfPassword.getText().trim();
			if (0 == password.length()) {
				JOptionPane.showMessageDialog(null, "密码不为空");
				return;
			}
			if (password.length() > 7) {
				JOptionPane.showMessageDialog(null, "密码过长");
				return;
			}
			if (!password.equals(tfPasswordConfirm.getText().trim())) {
				JOptionPane.showMessageDialog(null, "密码不一致");
				return;
			}
			double ycNum = Double.parseDouble(tfYCNum.getText().trim());
			if (ycNum < 0) {
				JOptionPane.showMessageDialog(null, "预存不为负");
				return;
			}

			String sql_alreadyRegist = "select BRBH from T_BRXX where BRMC = ?";
			PreparedStatement pStatement = connection.prepareStatement(sql_alreadyRegist);
			pStatement.setString(1, userName);
			ResultSet resultSet = pStatement.executeQuery();
			if (resultSet.next()) {
				JOptionPane.showMessageDialog(null, "编号 " + resultSet.getString("BRBH"), "信息已注册",
						JOptionPane.ERROR_MESSAGE);
			} else {
				connection.setAutoCommit(false);
				Statement statement = connection.createStatement();
				resultSet = statement.executeQuery("SELECT count(*) total FROM T_BRXX");
				if (resultSet.next()) {
					int idNum = resultSet.getInt("total") + 1;
					PreparedStatement preparedStatement = connection
							.prepareStatement("insert into T_BRXX(BRBH,BRMC,DLKL,YCJE,DLRQ) values (?,?,?,?,?)");
					preparedStatement.setString(1, String.format("%06d", idNum));
					preparedStatement.setString(2, userName);
					preparedStatement.setString(3, password);
					preparedStatement.setBigDecimal(4, new BigDecimal(ycNum));
					preparedStatement.setTimestamp(5, ConnectionDB.getDBTime());
					preparedStatement.executeUpdate();
					connection.commit();
					JOptionPane.showMessageDialog(null, "注册成功");
				}
			}
		} catch (NumberFormatException e) {
			e.printStackTrace();
			// TODO: handle exception
		} catch (NullPointerException e) {
			e.printStackTrace();
			// TODO: handle exception
		} catch (ClassNotFoundException e) {
			// TODO: handle exception
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
			// TODO: handle exception
		}
	}

	// Event Listener on Button[#btCancel].onAction
	@FXML
	public void cancelClicked(ActionEvent event) {
		// TODO Autogenerated
		stage.close();
	}
}
